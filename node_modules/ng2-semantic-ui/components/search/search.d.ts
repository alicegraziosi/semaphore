import { ElementRef, AfterViewInit, EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export declare class SuiSearch implements AfterViewInit {
    private _dropdownMenu;
    private _dropdownService;
    private _searchService;
    selectedOption: any;
    constructor(el: ElementRef);
    searchClasses: boolean;
    placeholder: string;
    searchDelay: number;
    icon: boolean;
    optionsField: string;
    selectedOptionChange: EventEmitter<any>;
    onItemSelected: EventEmitter<any>;
    readonly loading: boolean;
    readonly isVisible: boolean;
    isOpen: boolean;
    isDisabled: boolean;
    options: any;
    private query;
    private readonly results;
    private search();
    private result(i);
    select(result: any): void;
    writeValue(value: any): void;
    ngAfterViewInit(): void;
    click(event: MouseEvent): boolean;
}
export declare const CUSTOM_VALUE_ACCESSOR: any;
export declare class SuiSearchValueAccessor implements ControlValueAccessor {
    private host;
    onChange: () => void;
    onTouched: () => void;
    constructor(host: SuiSearch);
    writeValue(value: any): void;
    registerOnChange(fn: () => void): void;
    registerOnTouched(fn: () => void): void;
}
export declare const SUI_SEARCH_DIRECTIVES: (typeof SuiSearch | typeof SuiSearchValueAccessor)[];
